
#数据库名称
dubbo.global.dbName=infosys_auth
#dubbo应用名
dubbo.global.applicationName=infosys-auth

#目标工程输出目录，这里填写对应的工程的绝对路径
dubbo.code.outpath.dubbo-common=/Users/shenshuai/myspace/code-maker/codemaker-dubbo/dubbo-common
dubbo.code.outpath.dubbo-api=/Users/shenshuai/myspace/code-maker/codemaker-dubbo/dubbo-api
dubbo.code.outpath.dubbo-core=/Users/shenshuai/myspace/code-maker/codemaker-dubbo/dubbo-core

#应用服务的plantUML类图文件,不配置则走基于数据表的方式生成代码
dubbo.domain.plantuml=auth-domainV5.puml

#dubbo.domain.plantuml=SchoolManager.puml

#是否构建api 文档，否则进行构建,默认构建
dubbo.api.generator=true

#是否需要根据该参数设置请求参数的最后一级包名为request,默认false
dubbo.subpackage.request=false

#是否需要根据该参数设置相应参数的最后一级包名为response,默认false
dubbo.subpackage.response=false


#需要导入的组件列表，多个逗号分割
dubbo.component.scan.config=apiresult,infosysuser,hutool-core

#需要在领域文档和调用时序文档中识别的读操作统一语言
dubbo.component.dsl.read=check

#需要在领域文档和调用时序文档中识别的写操作统一语言
dubbo.component.dsl.write=settle


#应用级组件中间件工具包的组件扫描bean配置
dubbo.component.scan.beans=appCompScanService

#应用级组件中间件工具包的组件装饰bean配置
dubbo.component.decorate.beans=appCompDecorateService

#应用级代码工具类注册，项目初始化时可以帮助初始化对应的工具类
#后面生成代码的时候可以删掉工具类，只专注于生成业务代码
#格式说明 eg:BaseEvent:core 前面是需要初始化的类，后面是这个类放到哪个模块下
dubbo.component.init.clazz=BaseEvent:core,Application:core,SpringApplicationContext:core,AppEventPublisher:core

