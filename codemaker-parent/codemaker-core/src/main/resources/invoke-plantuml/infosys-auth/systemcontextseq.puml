@startuml

participant  应用facade层 as  facade
participant  应用http层 as  http
participant  领域层 as  domain
participant  基础设施层 as  infrast
group 系统注册流程
app_http --> domain: 1.查询系统信息是否已注册\nSystemController.saveSystem invoke SystemModuleQueryGataWay.getSystemByName
domain --> infrast:2.查询系统信息\n SystemModuleQueryGataWay.getSystemByName invoke SystemMapper.getByName(String systemName)
app_http --> domain: 3.注册系统\nSystemController.saveSystem invoke SystemModuleRepository.saveSystem
domain --> infrast:4.持久化系统数据\n SystemModuleRepository.saveSystem invoke SystemMapper.insert
domain --> infrast:5.发送mq\n SystemModuleRepository.saveSystem invoke SystemMqProducer.systemChange
end


group 系统查询流程
app_http --> domain: 1.分页查询系统数据\n SystemQueryController.getPageList invoke SystemModuleQueryGataWay.querySystemPage
domain --> infrast:2.分页查询系统数据\n SystemModuleQueryGataWay.querySystemPage invoke SystemMapper.getPageList(PageBO pageBO)
app_http --> domain: 3.根据条件搜索\SystemQueryController.getSearchList invoke SystemModuleQueryGataWay.queryByCondition
domain --> infrast:4.根据条件搜索\n SystemModuleQueryGataWay.queryByCondition invoke SystemMapper.queryByCondition
end

group 查询单条数据
app_http --> domain: 1.查询单条系统数据\n SystemQueryController.getByCode invoke SystemModuleQueryGataWay.queryBySystemCode
domain --> infrast: 2.查询单条系统数据\n SystemModuleQueryGataWay.queryBySystemCode invoke SystemMapper.queryBySystemCode(String systemCode)

end


group 修改系统数据
app_http --> domain: 1.修改系统数据\n SystemController.updateSystem invoke SystemModuleRepository.updateSystem
domain --> infrast:2.修改系统数据\n SystemModuleRepository.updateSystem invoke SystemMapper.updateSystem
end


group 系统注册流程
facade --> domain: 1.查询系统信息是否已注册\nSystemFacade.registSystem invoke SystemModuleQueryGataWay.getSystemByName
end


group 系统查询流程
facade --> domain: 1.分页查询系统数据\n SystemFacade.getPageList invoke SystemModuleQueryGataWay.querySystemPage
facade --> domain: 2.根据条件搜索\n SystemFacade.getSearchList invoke SystemModuleQueryGataWay.queryByCondition

end

group 查询单条数据
facade --> domain: 1.查询单条系统数据\n SystemFacade.getBySystemCode invoke SystemModuleQueryGataWay.queryBySystemCode
end


group 修改系统数据
facade --> domain: 1.修改系统数据\n SystemFacade.updateSystem invoke SystemModuleRepository.updateSystem
end

group 添加菜单流程
app_http --> domain: 1.添加菜单前先查一下菜单是否被注册过\n ModuleController.createModule invoke SystemModuleQueryGataWay.getModuleByCode
app_http --> domain: 2.添加菜单前先查一下菜单是否被注册过\n ModuleController.createModule invoke SystemModuleRepository.saveModule
domain --> infrast:3.持久化菜单信息\n SystemModuleRepository.saveModule invoke ModuleMapper.insert
end

group 根据菜单code查询菜单和按钮列表详情
app_http --> domain: 1.查询菜单信息是否已注册\nModuleController.getByModuleCode invoke SystemModuleQueryGataWay.getModuleByCode
domain --> infrast:2.查询历史菜单信息\n SystemModuleQueryGataWay.getModuleByCode invoke ModuleMapper.getByName(String moduleName)
domain --> infrast:3.查询关联的按钮信息\n SystemModuleQueryGataWay.getModuleByCode invoke MenuMapper.getListByModuleCode(String moduleCode)
end


group 修改菜单信息
app_http --> domain: 1.修改菜单信息\nModuleController.updateModule invoke SystemModuleRepository.updateModule
domain --> infrast:2.查询历史菜单信息\n SystemModuleRepository.updateModule invoke ModuleMapper.update
end






group 添加按钮流程(简化版)
app_http --> domain: 3.注册系统\n MenuController.createMenu invoke SystemModuleRepository.saveMenu
domain --> infrast:4.持久化系统数据\n SystemModuleRepository.saveMenu invoke MenuMapper.insert
end

group 修改按钮流程(简化版)
app_http --> domain: 3.注册系统\n MenuController.updateMenu invoke SystemModuleRepository.updateMenu
domain --> infrast:4.持久化系统数据\n SystemModuleRepository.updateMenu invoke MenuMapper.update
end


@enduml