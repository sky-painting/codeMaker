#数据库名称
springcloud.global.dbName=infosys_auth

#项目名称
springcloud.global.applicationName=infosys-auth

#maven坐标-GAV
springcloud.pom.groupId=com.snail.school.manager
springcloud.pom.artifactId=schoolmanager-web
springcloud.pom.version=1.0.0.SNAPSHOT
#目标工程输出目录，这里填写对应的codemaker-web工程的绝对路径
springcloud.code.feign-api=/Users/shenshuai/myspace/code-maker/codemaker-springcloud/springcloud-api
springcloud.code.feign-provider=/Users/shenshuai/myspace/code-maker/codemaker-springcloud/springcloud-provider

#应用服务的plantUML类图文件,不配置则走基于数据表的方式生成代码
springcloud.domain.plantuml=auth-domainV5.puml
#springcloud.domain.plantuml=SchoolManager.puml


#是否构建api 文档，否则进行构建,默认构建
springcloud.api.generator=true

#需要导入的组件列表，多个逗号分割,适用于cola模块下依赖的业务组件包或者对外api接口包，或者cola项目本身已有的代码类,或者其他偏业务的工具类组件等等。
#如要生成的项目会依赖 infosys-user 服务的api则在这里定义即可
springcloud.component.scan.config=apiresult


#需要在领域文档和调用时序文档中识别的读操作统一语言
springcloud.component.dsl.read=check

#需要在领域文档和调用时序文档中识别的写操作统一语言
springcloud.component.dsl.write=settle

#是否需要根据该参数设置请求参数的最后一级包名为request,默认false
springcloud.subpackage.request=false

#是否需要根据该参数设置相应参数的最后一级包名为response,默认false
springcloud.subpackage.response=false



#应用级组件中间件工具包的组件扫描bean配置,如无特定技术栈，无需更换该组件
springcloud.component.scan.beans=appCompScanService


#应用级组件中间件工具包的组件装饰bean配置,如无特定技术栈，无需更换该组件
springcloud.component.decorate.beans=appCompDecorateService


#应用级代码工具类注册，项目初始化时可以帮助初始化对应的工具类
#后面生成代码的时候可以删掉工具类，只专注于生成业务代码
#格式说明 eg:BaseEvent:core 前面是需要初始化的类，后面是这个类放到哪个模块下
springcloud.component.init.clazz=BaseEvent:provider,Application:provider,SpringApplicationContext:provider,AppEventPublisher:provider