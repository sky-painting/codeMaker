# FREEMARKER (FreeMarkerAutoConfiguration)
spring.freemarker.allow-request-override=false
spring.freemarker.allow-session-override=false
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.enabled=true
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=true
spring.freemarker.prefer-file-system-access=true
# 这是重点， 会过滤.ftl后缀的文件
spring.freemarker.suffix=.ftl
# spring boot 默认的页面模板存放目录
spring.freemarker.template-loader-path=classpath:/template/
spring.freemarker.settings.template_update_delay=0
spring.freemarker.settings.default_encoding=UTF-8
spring.freemarker.settings.classic_compatible=true

server.port=8099

#数据库配置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/infosys_auth?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC
spring.datasource.username=
spring.datasource.password=

#配置.xml文件路径
mybatis.config-locations=classpath:mybatis-config.xml
mybatis.mapper-locations=classpath:mapper/*.xml
#配置模型路径
mybatis.type-aliases-package=com.coderman.codemaker.bean
spring.application.name=codemaker
#生成的应用类型，支持springboot,dubbo,cola,springcloud
application.type=cola

#目标应用根包名称
application.global.package=com.coderman.infosys.auth
#作者
application.global.author=shenshuai


#组件化需要的maven repository本地路径,用来扫描依赖的组件jar包
application.maven.repo.path=jar:file:///Users/shenshuia/.m2/repository

#代码生成需要的全局组件，框架中间件可以放到全局组件依赖配置里,类似于脚手架,或者自己封装的业务组件框架
application.component.scan.config=dubbo,spring-web,openfeign

#自定义的组件扫描bean,defaultCompScanService为codeMaker默认实现支持全局组件的配置，开发者可以参考进行自定义扫描组件实现替代掉默认的
application.component.scan.bean=defaultCompScanService

#自定义的组件装饰bean,defaultCompDecorateService默认实现支持全局组件的装饰，开发者可以参考进行自定义扫描组件实现替代掉默认的
application.component.decorate.bean=defaultCompDecorateService
