#数据库名称
springboot.global.dbName=infosys_auth

#项目名称
springboot.global.applicationName=infosys-auth

#maven坐标-GAV
codemaker.pom.groupId=com.snail.school.manager
codemaker.pom.artifactId=schoolmanager-web
codemaker.pom.version=1.0.0.SNAPSHOT
#目标工程输出目录，这里填写对应的codemaker-web工程的绝对路径
codemaker.code.outpath=/Users/shenshuai/myspace/code-maker/codemaker-springboot

#应用服务的plantUML类图文件,不配置则走基于数据表的方式生成代码
codemaker.domain.plantuml=auth-domainV5.puml
#codemaker.domain.plantuml=SchoolManager.puml


#是否构建api 文档，否则进行构建,默认构建
springboot.api.generator=true


springboot.component.scan.config=apiresult,infosys-user


#需要在领域文档和调用时序文档中识别的读操作统一语言
springboot.component.dsl.read=check

#需要在领域文档和调用时序文档中识别的写操作统一语言
springboot.component.dsl.write=settle

#是否需要根据该参数设置请求参数的最后一级包名为request,默认false
springboot.subpackage.request=false

#是否需要根据该参数设置相应参数的最后一级包名为response,默认false
springboot.subpackage.response=false



#应用级组件中间件工具包的组件扫描bean配置
springboot.component.scan.beans=appCompScanService


#应用级组件中间件工具包的组件装饰bean配置
springboot.component.decorate.beans=appCompDecorateService


#应用级代码工具类注册，项目初始化时可以帮助初始化对应的工具类
#后面生成代码的时候可以删掉工具类，只专注于生成业务代码
#格式说明 eg:BaseEvent:core 前面是需要初始化的类，后面是这个类放到哪个模块下
springboot.component.init.clazz=BaseEvent:springboot,Application:springboot,SpringApplicationContext:springboot,AppEventPublisher:springboot